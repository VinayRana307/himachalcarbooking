{"version":3,"sources":["Components/Authentication/Login.js","Components/AppHeader/AppHeader.js","FormValidation/validator.js","Components/Authentication/Register.js","Components/Router/router.js","Components/index.js","App.js","Action/Action.js","reportWebVitals.js","Reducer/Increment.js","Reducer/Decrement.js","CombineReducer/CombineReducer.js","store/store.js","index.js"],"names":["Login","className","href","Row","Col","Card","CardTitle","FormGroup","Label","Input","name","type","placeholder","style","textAlign","Button","Component","AppHeader","this","props","match","isEmpty","thing","empty","trim","length","Object","keys","UserRegister","handleInputChange","event","target","value","formData","state","setState","handleSumbit","data","email","SocialAuthenticate","profileObj","error","errors","test","password","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","status","window","location","alert","responseGoogle","response","autocomplete","onChange","autoComplete","onClick","clientId","buttonText","onSuccess","onFailure","cookiePolicy","appId","fields","callback","SocialMediaData","padding","Routers","exact","path","url","component","Comp","render","to","App","Components","connect","inc","increment","dec","decrement","dispatch","payload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Increment","action","Decrement","CombineReducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4017b955.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport { Row, Col, Card, CardBody, CardTitle, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Button} from 'react-bootstrap';\r\nclass Login extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"loginBackgroundColor\">\r\n                <strong className=\"Home_Link\"><a href=\"/Himachal\">Home</a></strong>\r\n                <div className='Login_Form'>\r\n                    <div className='Login_Container'>\r\n                        <Row className='col-sm-12'>\r\n                            <Col>\r\n                                <Card>\r\n                                    <div className=\"Card_Inner_div\">\r\n                                        <CardTitle className=\"cardTitle\">Login User</CardTitle>\r\n                                        <FormGroup className=\"formGroup\">\r\n                                            <Label className=\"from_Label\">Email :   </Label>\r\n                                            <Input\r\n                                                name='email'\r\n                                                type='text'\r\n                                                placeholder='example123@gmail.com'\r\n                                            />\r\n                                        </FormGroup>\r\n                                        <FormGroup className=\"formGroup\">\r\n                                            <Label className=\"from_Label\">Password :   </Label>\r\n                                            <Input\r\n                                                name='password'\r\n                                                type=\"password\"\r\n                                            />\r\n                                        </FormGroup>\r\n                                        <FormGroup style={{textAlign:'center'}}>\r\n                                            <Button className=\"Sumbitbutton\">Submit</Button>\r\n                                        </FormGroup>\r\n                                        <FormGroup style={{textAlign:'center'}}>\r\n                                            <strong><a href=\"\">Forgot Password</a></strong>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React,{Component} from 'react';\r\nimport Login from '../Authentication/Login';\r\nimport {BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\r\n\r\nclass AppHeader extends Component{\r\n    render(){\r\n\t\tconst {match} = this.props;\r\n        return (\r\n            <div className='Homepage_Header'>\r\n                <div className='Homepage_innerHeader'>\r\n                    <ul>\r\n                        <li>\r\n                            <a href='/'>Home</a>\r\n                            <a href='Downloads'>Downloads</a>\r\n                            <a href='About'>About</a>\r\n                            <a href='Profile'>Profile</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className='authentication_links'>\r\n                        <ul>\r\n                            <li>\r\n                                <a href='Himachal/login'>Login</a>\r\n                                <a href='Himachal/signup'>Register</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppHeader;","/**\n * Chek if email is valid\n * @prop String email\n * @returns Boolean\n */\nexport const isEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nexport const isNumber = (number) => {\n    const re = /^[0-9]{0,30}$/;\n    return re.test(number);\n}\n/**\n * Chek if vatiable is empty\n * @prop String thing\n * @returns Boolean\n */\nexport const isEmpty = (thing) => {\n    let empty = false;\n\n    switch (typeof thing) {\n        case 'undefined':\n            empty = true;\n            break;\n        case 'string':\n            if (thing.trim().length === 0) {\n                empty = true;\n            }\n            break;\n        case 'object':\n            if (thing === null) {\n                empty = true;\n            } else if (Object.keys(thing).length === 0) {\n                empty = true;\n            }\n            break;\n        default:\n            empty = true;\n    }\n\n    return empty;\n}\n\n/**\n * Check length of the string greater than\n * @prop String|Integer str\n * @prop boolean|options.trim Trim input before validating\n * @prop number|options.lt Check if length less than lt\n * @prop number|options.lte Check if length is less than or equals to lte\n * @prop number|options.gt Check if length is greater than gt\n * @prop number|options.gte Check if length is greater than or equals to gte\n * @returns Boolean\n */\nexport const isLength = (str, options) => {\n\n    if (isEmpty(options)) {\n        throw new Error(\"Who will provide the options you?\")\n    }\n\n    let isValid = true;\n\n    if (['string', 'number'].indexOf(typeof str) === -1) {\n        isValid = false;\n    } else {\n        // Convert to string incase it's number\n        let len = 0;\n\n        if(options.trim){\n            len = str.toString().trim().length;\n        } else {\n            len = str.toString().length;\n        }\n\n        if (typeof options.lt === 'number' && len >= options.lt) {\n            isValid = false;\n        } else if (typeof options.lte === 'number' && len > options.lte) {\n            isValid = false;\n        } else if (typeof options.gt === 'number' && len <= options.gt) {\n            isValid = false;\n        } else if (typeof options.gte === 'number' && len < options.gte) {\n            isValid = false;\n        }\n    }\n    return isValid;\n}\n\n/**\n * Check if string contains whitespaces\n * @prop String str\n * @returns Boolean\n */\nexport const isContainWhiteSpace = (str) => {\n\n    if(typeof str === 'string' || typeof str === 'number'){\n        return str.toString().trim().indexOf(' ') !== -1;\n    } else {\n        return false;\n    }\n}","import React,{Component} from 'react';\r\nimport { Row, Col, Card, CardBody, CardTitle, FormGroup, Label, Input} from 'reactstrap';\r\nimport { Button} from 'react-bootstrap';\r\nimport { isEmail, isEmpty,isNumber } from '../../FormValidation/validator';\r\nimport { useAlert } from \"react-alert\";\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport Modal from \"react-responsive-modal\";\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nclass UserRegister extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            formData : {},\r\n            errors : []\r\n        }\r\n    }\r\n    handleInputChange = (event) =>{\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        let {formData} = this.state;\r\n\r\n        formData[name] = value;\r\n\r\n        this.setState({\r\n            formData : formData\r\n        })\r\n    }\r\n    handleSumbit = (data) =>{\r\n        const {formData} =  this.state;\r\n        const SocialAuthenticate = data.profileObj;\r\n        let error = [];\r\n\t\tif(formData){\r\n\t\t\tthis.setState({ errors : error})\r\n\t\t}\r\n\t\tif(isEmpty(formData.name)){\r\n\t\t\terror.name = \"Type Your Name\"\r\n\t\t}\r\n\t\tif(isEmpty(formData.email)){\r\n\t\t\terror.email = \"Type Your Email\"\r\n\t\t}\r\n\t\telse if (!isEmail(formData.email)) {\r\n\t\t\terror.email = \"Enter a valid email\";\r\n\t\t}\r\n\t\tif(isEmpty(formData.password)){\r\n\t\t\terror.password = \"Type your Password\"\r\n\t\t}\r\n\t\tif(isEmpty(error) || SocialAuthenticate){\r\n\r\n\t\t\tfetch('http://localhost:4000/api/create',{\r\n\t\t\t\tmethod:'POST',\r\n\t\t\t\theaders : {\r\n\t\t\t\t\t'content-Type' : 'application/json',\r\n\t\t\t\t\t'accept' : 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\r\n\t\t\t\t  name: formData.name || SocialAuthenticate.name,\r\n\t\t\t\t  email: formData.email || SocialAuthenticate.email,\r\n\t\t\t\t  password: formData.password || '12345'\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(res=>{\r\n\t\t\t\treturn res.json();\r\n\t\t\t})\r\n\t\t\t.then(data=>{\r\n\t\t\t\tconsole.log(data)\r\n                \r\n\t\t\t\tconst user = data;\r\n\t\t\t\tif(user.status === \"success\"){\r\n\t\t\t\t\twindow.location.href = \"/Himachal\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\talert('Fill all the inputs')\r\n\t\t}\r\n    }\r\n    render(){\r\n        const {errors} = this.state;\r\n        \r\n        const responseFacebook = (response) => {\r\n\t\t\tconsole.log(response)\r\n\t\t\tthis.SocialMediaData(response);\r\n\t\t\t\r\n\t\t}\r\n\t\tconst responseGoogle = (response) => {\r\n            console.log(response)\r\n\t\t\t\tthis.handleSumbit(response);\r\n\t\t}\r\n        return(\r\n            <div className=\"loginBackgroundColor\">\r\n                <strong className=\"Home_Link\"><a href=\"/Himachal\">Home</a></strong>\r\n                <div className='Login_Form'>\r\n                    <div className='Login_Container'>\r\n                        <Row className='col-sm-12'>\r\n                            <Col>\r\n                                <Card>\r\n                                    <div className=\"Card_Inner_div\">\r\n                                    <CardTitle className=\"cardTitle\">Signup User</CardTitle>\r\n                                        <FormGroup className=\"formGroup\">\r\n                                            <Label className=\"from_Label\">Name :   </Label>\r\n                                            <Input\r\n                                                name='name'\r\n                                                type='text'\r\n                                                autocomplete=\"false\"\r\n                                                onChange={this.handleInputChange}\r\n                                            />\r\n                                            {errors.name?<p className=\"validationError\">{errors.name}</p>:null}\r\n                                        </FormGroup>\r\n                                        <FormGroup  className=\"formGroup\">\r\n                                            <Label className=\"from_Label\">Email :   </Label>\r\n                                            <Input\r\n                                                name='email'\r\n                                                type='text'\r\n                                                autoComplete=\"off\"\r\n                                                placeholder='example123@gmail.com'\r\n                                                onChange={this.handleInputChange}\r\n                                            />\r\n                                            {errors.email?<p className=\"validationError\">{errors.email}</p>:null}\r\n                                        </FormGroup>\r\n                                        <FormGroup className=\"formGroup\">\r\n                                            <Label className=\"from_Label\">Password :   </Label>\r\n                                            <Input\r\n                                                name='password'\r\n                                                type=\"password\"\r\n                                                autoComplete=\"false\"\r\n                                                onChange={this.handleInputChange}\r\n                                            />\r\n                                            {errors.password?<p className=\"validationError\">{errors.password}</p>:null}\r\n                                        </FormGroup>\r\n                                        <FormGroup style={{textAlign:'center'}}>\r\n                                            <Button className=\"Sumbitbutton\" onClick={this.handleSumbit}>Submit</Button>\r\n                                        </FormGroup>\r\n                                        <FormGroup className=\"col-md-12\">\r\n                                            <GoogleLogin\r\n                                                clientId=\"202023482665-qqdm2k87tvncnhokn7cbgcecn2rn9rlj.apps.googleusercontent.com\"\r\n                                                buttonText=\"Google\"\r\n                                                onSuccess={responseGoogle}\r\n                                                onFailure={responseGoogle}\r\n                                                cookiePolicy={'single_host_origin'}\r\n                                                className=\"googleAlignment\"\r\n                                                />\r\n                                            </FormGroup>\r\n                                            <FormGroup className=\"col-md-12\">\r\n                                                <FacebookLogin\r\n                                                    appId=\"1381293252057641\" //APP ID NOT CREATED YET\r\n                                                    fields=\"name,email\"\r\n                                                    callback={responseFacebook} style={{ padding: '7px' }}\r\n                                                />\r\n                                            </FormGroup>\r\n                                            \r\n                                    </div>        \r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default UserRegister;","import React,{Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport AppHeader from '../AppHeader/AppHeader';\r\nimport Login from '../Authentication/Login';\r\nimport UserRegister from '../Authentication/Register';\r\n\r\nconst Routers = ({match}) => (\r\n\t<div>\r\n\t\t<Route exact path={`${match.url}`} component={AppHeader}/>\r\n\t\t<Route path={`${match.url}/login`} component={Login}/>\r\n\t\t<Route path={`${match.url}/signup`} component={UserRegister}/>\r\n\t</div>\r\n)\r\nexport default Routers;\r\n","import AppHeader from './AppHeader/AppHeader';\r\nimport {BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\r\nimport Routers from './Router/router';\r\n\r\nfunction Comp(){\r\n    return(\r\n        <div>\r\n\t\t\t<Router>\r\n\t\t\t\t<Route path=\"/Himachal\" component={Routers}/>\r\n\t\t\t\t<Route exact path=\"/\" render={() => (\r\n\t\t\t\t\t<Redirect to=\"/Himachal\"/>\r\n\t\t\t\t)}/>\r\n\t\t\t</Router>\t\t\t\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comp;","import React,{Component} from 'react';\nimport {Increment,Decrement} from './Action/Action'\nimport {connect} from 'react-redux';\nimport Components from './Components';\nimport './Assets/index.css'\nimport Routers from './Components/Router/router'\n\nconst mapStateToProps = (props) =>{\n\treturn {\n\t\tinc : props.increment,\n\t\tdec : props.decrement,\n\t}\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n\treturn{\n\t\tincrement : ()=> dispatch(Increment()),\n\t\tdecrement : ()=> dispatch(Decrement()),\n\t}\n}\n\n\n\nclass App extends Component {\n\trender(){\n\t  return (\n\t\t<div className=\"App\">\n\t\t\t<Components />\n\t\t</div>\n\t  );\n\t}\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","const Increment = () => {\r\n\treturn ({\r\n\t\ttype : 'INCREMENT',\r\n\t\tpayload : 1\t\r\n\t})\r\n}\r\n\r\nconst Decrement = () => {\r\n\treturn ({\r\n\t\ttype : 'DECREMENT',\r\n\t\tpayload : 1\t\r\n\t})\r\n}\r\n\r\nexport {Increment ,Decrement} ;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const Increment = (state=20,action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'INCREMENT':\r\n\t\t return state+1;\r\n\t\t \r\n\t\t \r\n\t\t default :\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default Increment;","const Decrement = (state=0,action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'DECREMENT':\r\n\t\t return state+1;\r\n\t\t \r\n\t\t default :\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default Decrement;","import Increment from '../Reducer/Increment';\r\nimport Decrement from '../Reducer/Decrement';\r\nimport {combineReducers} from 'redux';\r\n\r\n\r\nconst CombineReducers = combineReducers({\r\n\tincrement : Increment,\r\n\tdecrement : Decrement\r\n})\r\n\r\nexport default CombineReducers;","import CombineReducers from '../CombineReducer/CombineReducer';\r\nimport {createStore} from 'redux';\r\n\r\n\r\nconst store = createStore(CombineReducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}